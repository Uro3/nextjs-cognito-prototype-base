/**
 * Generated by orval v7.7.0 🍺
 * Do not edit manually.
 * Prototype API
 * OpenAPI spec version: 0.1.0
 */
import type {
  CreatePostBody,
  Post
} from './client.schemas';

import { customFetch } from '../custom-fetch';

export type createPostResponse201 = {
  data: Post
  status: 201
}
    
export type createPostResponseComposite = createPostResponse201;
    
export type createPostResponse = createPostResponseComposite & {
  headers: Headers;
}

export const getCreatePostUrl = () => {


  

  return `http://dummy.example.com/api/posts`
}

export const createPost = async (createPostBody: CreatePostBody, options?: RequestInit): Promise<createPostResponse> => {
  
  return customFetch<createPostResponse>(getCreatePostUrl(),
  {      
    ...options,
    method: 'POST',
    headers: { 'Content-Type': 'application/json', ...options?.headers },
    body: JSON.stringify(
      createPostBody,)
  }
);}



export type listPostsResponse200 = {
  data: Post[]
  status: 200
}
    
export type listPostsResponseComposite = listPostsResponse200;
    
export type listPostsResponse = listPostsResponseComposite & {
  headers: Headers;
}

export const getListPostsUrl = () => {


  

  return `http://dummy.example.com/api/posts`
}

export const listPosts = async ( options?: RequestInit): Promise<listPostsResponse> => {
  
  return customFetch<listPostsResponse>(getListPostsUrl(),
  {      
    ...options,
    method: 'GET'
    
    
  }
);}



